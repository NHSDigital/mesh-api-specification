[project]
name="mesh_api_specification"
python = "^3.8"


[tool.poetry]
name = "apim-definitions"
version = "0.0.1-alpha"
description = "Hello World API Definitions"

license = "MIT"

authors = [
    "Paul Walkington <paul.walkington1@nhs.net>"
]

readme = 'README.md'

repository = "https://github.com/NHSDigital/mesh-api-api"
homepage = ""

keywords = ["healthcare", "uk", "nhs"]


[tool.poetry.dependencies]
python = "^3.8"
docopt = "^0.6.2"
jsonpath-rw = "^1.4.0"
semver = "^3.0.1"
gitpython = "^3.1.40"


[tool.poetry.dev-dependencies]
ruff = "^0.0.291"
black = "^23.9.1"
pip-licenses = "^2.0.1"
jinja2 = "^3.1.2"


[tool.poetry.scripts]

[tool.poetry.group.dev.dependencies]
black = "^23.9.1"

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
#extend-exclude = '''
#/(
#  # The following are specific to Black, you probably don't want those.
#  | blib2to3
#  | tests/data
#  | profiling
#)/
#'''

[tool.ruff]
select = [
    # See https://beta.ruff.rs/docs/rules/ for a full list
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "Q", # flake8-quotes
    "YTT", # flake8-2020
    "RSE", # flake8-raise
    "T10", # flake8-debugger
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "PIE", # flake8-pie
    "EXE", # flake8-executable
    "A", # flake8-builtins
    "UP",  # pyupgrade
    "PT", # flake8-pytest-style
    "PERF", # Perflint #
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
]
src = ["."]
ignore = []
exclude = [
    ".git",
    ".venv",
]
unfixable = []
line-length = 120
target-version = "py310"

[tool.ruff.per-file-ignores]